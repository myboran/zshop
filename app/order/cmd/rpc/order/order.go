// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package order

import (
	"context"

	"github.com/myboran/zshop/app/order/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AllOrderResp   = pb.AllOrderResp
	OrderEmpty     = pb.OrderEmpty
	OrderGoods     = pb.OrderGoods
	OrderGoodsReq  = pb.OrderGoodsReq
	OrderGoodsResp = pb.OrderGoodsResp
	OrderInfo      = pb.OrderInfo
	UserOrderReq   = pb.UserOrderReq
	UserOrderResp  = pb.UserOrderResp

	Order interface {
		AllOrderInfo(ctx context.Context, in *OrderEmpty, opts ...grpc.CallOption) (*AllOrderResp, error)
		AllOrderGoods(ctx context.Context, in *OrderGoodsReq, opts ...grpc.CallOption) (*OrderGoodsResp, error)
		UserOrder(ctx context.Context, in *UserOrderReq, opts ...grpc.CallOption) (*UserOrderResp, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

func (m *defaultOrder) AllOrderInfo(ctx context.Context, in *OrderEmpty, opts ...grpc.CallOption) (*AllOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.AllOrderInfo(ctx, in, opts...)
}

func (m *defaultOrder) AllOrderGoods(ctx context.Context, in *OrderGoodsReq, opts ...grpc.CallOption) (*OrderGoodsResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.AllOrderGoods(ctx, in, opts...)
}

func (m *defaultOrder) UserOrder(ctx context.Context, in *UserOrderReq, opts ...grpc.CallOption) (*UserOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.UserOrder(ctx, in, opts...)
}
