// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package goods

import (
	"context"

	"github.com/myboran/zshop/app/goods/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GoodDetailReq = pb.GoodDetailReq
	GoodsEmpty    = pb.GoodsEmpty
	GoodsInfo     = pb.GoodsInfo
	GoodsListReq  = pb.GoodsListReq
	GoodsListResp = pb.GoodsListResp

	Goods interface {
		GoodsList(ctx context.Context, in *GoodsListReq, opts ...grpc.CallOption) (*GoodsListResp, error)
		GoodsDetail(ctx context.Context, in *GoodDetailReq, opts ...grpc.CallOption) (*GoodsInfo, error)
	}

	defaultGoods struct {
		cli zrpc.Client
	}
)

func NewGoods(cli zrpc.Client) Goods {
	return &defaultGoods{
		cli: cli,
	}
}

func (m *defaultGoods) GoodsList(ctx context.Context, in *GoodsListReq, opts ...grpc.CallOption) (*GoodsListResp, error) {
	client := pb.NewGoodsClient(m.cli.Conn())
	return client.GoodsList(ctx, in, opts...)
}

func (m *defaultGoods) GoodsDetail(ctx context.Context, in *GoodDetailReq, opts ...grpc.CallOption) (*GoodsInfo, error) {
	client := pb.NewGoodsClient(m.cli.Conn())
	return client.GoodsDetail(ctx, in, opts...)
}
